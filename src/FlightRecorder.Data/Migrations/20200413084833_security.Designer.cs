// <auto-generated />
using System;
using FlightRecorder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightRecorder.Data.Migrations
{
    [DbContext(typeof(FlightRecorderDbContext))]
    [Migration("20200413084833_security")]
#pragma warning disable CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
    partial class security
#pragma warning restore CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("FlightRecorder.Entities.Db.Aircraft", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Manufactured")
                        .HasColumnName("manufactured")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ModelId")
                        .HasColumnName("model_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnName("registration")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnName("serial_number")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("AIRCRAFT");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Airline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("AIRLINE");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AirlineId")
                        .HasColumnName("airline_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnName("destination")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("Embarkation")
                        .IsRequired()
                        .HasColumnName("embarkation")
                        .HasColumnType("VARCHAR(3)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("number")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("FLIGHT");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("LOCATION");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("MANUFACTURER");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ManufacturerId")
                        .HasColumnName("manufacturer_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("MODEL");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Sighting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AircraftId")
                        .HasColumnName("aircraft_id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Altitude")
                        .HasColumnName("altitude")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("DATETIME");

                    b.Property<long>("FlightId")
                        .HasColumnName("flight_id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LocationId")
                        .HasColumnName("location_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("FlightId");

                    b.HasIndex("LocationId");

                    b.ToTable("SIGHTING");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Aircraft", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Model", "Model")
                        .WithMany("Aircraft")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Flight", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Airline", "Airline")
                        .WithMany("Flight")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Model", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Manufacturer", "Manufacturer")
                        .WithMany("Model")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Sighting", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Aircraft", "Aircraft")
                        .WithMany("Sighting")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightRecorder.Entities.Db.Flight", "Flight")
                        .WithMany("Sighting")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightRecorder.Entities.Db.Location", "Location")
                        .WithMany("Sighting")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
