// <auto-generated />
using System;
using FlightRecorder.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightRecorder.Data.Migrations
{
    [DbContext(typeof(FlightRecorderDbContext))]
    [Migration("20231022201831_OptionalAircraftDetails")]
    partial class OptionalAircraftDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("FlightRecorder.Entities.Db.Aircraft", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("Manufactured")
                        .HasColumnType("INTEGER")
                        .HasColumnName("manufactured");

                    b.Property<long?>("ModelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("model_id");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("registration");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("serial_number");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("AIRCRAFT", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Airline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("AIRLINE", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Airport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5)")
                        .HasColumnName("code");

                    b.Property<long>("CountryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("AIRPORT", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("COUNTRY", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("AirlineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("airline_id");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)")
                        .HasColumnName("destination");

                    b.Property<string>("Embarkation")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)")
                        .HasColumnName("embarkation");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("number");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("FLIGHT", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("LOCATION", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("MANUFACTURER", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("manufacturer_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("MODEL", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Sighting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("AircraftId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("aircraft_id");

                    b.Property<long>("Altitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("altitude");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATETIME")
                        .HasColumnName("date");

                    b.Property<long>("FlightId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("flight_id");

                    b.Property<long>("LocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("location_id");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("FlightId");

                    b.HasIndex("LocationId");

                    b.ToTable("SIGHTING", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1000)")
                        .HasColumnName("Password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("FlightRecorder.Entities.Reporting.AirlineStatistics", b =>
                {
                    b.Property<int?>("Aircraft")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Flights")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Locations")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Manufacturers")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Models")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Sightings")
                        .HasColumnType("INTEGER");

                    b.ToTable("AirlineStatistics");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Reporting.LocationStatistics", b =>
                {
                    b.Property<int?>("Aircraft")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Flights")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Manufacturers")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Models")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Sightings")
                        .HasColumnType("INTEGER");

                    b.ToTable("LocationStatistics");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Reporting.ManufacturerStatistics", b =>
                {
                    b.Property<int?>("Aircraft")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Flights")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Locations")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Models")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Sightings")
                        .HasColumnType("INTEGER");

                    b.ToTable("ManufacturerStatistics");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Reporting.ModelStatistics", b =>
                {
                    b.Property<int?>("Aircraft")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Flights")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Locations")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Sightings")
                        .HasColumnType("INTEGER");

                    b.ToTable("ModelStatistics");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Aircraft", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Airport", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Flight", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Model", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("FlightRecorder.Entities.Db.Sighting", b =>
                {
                    b.HasOne("FlightRecorder.Entities.Db.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightRecorder.Entities.Db.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightRecorder.Entities.Db.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Flight");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
